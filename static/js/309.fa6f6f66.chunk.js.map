{"version":3,"file":"static/js/309.fa6f6f66.chunk.js","mappings":"8PACA,EAAsB,4BAAtB,EAAmE,uCAAnE,EAAoH,gC,SCOvGA,EAAiB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC/B,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA4CJ,EAAAA,EAAAA,WAAS,GAArD,eAAOK,EAAP,KAAuBC,EAAvB,KAEMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,GAMzBC,GAAoBC,EAAAA,EAAAA,cAAY,WACpC,IAAMC,EAASb,GAAQc,EAAAA,EAAAA,GAAcN,EAAYR,GAASQ,EAEpDO,EAAgC,GAAlBX,EAAa,GAC3BY,EAAWC,KAAKC,IAAIH,EAAa,EAAGF,EAAOM,QACjDZ,EAAkBS,EAAWH,EAAOM,QAEpC,IAAMC,EAAcP,EAAOQ,MAAM,EAAGL,GACpCb,EAAkBiB,EACnB,GAAE,CAACZ,EAAYR,EAAOI,IAMvB,OAJAkB,EAAAA,EAAAA,YAAU,WACRX,GACD,GAAE,CAACP,EAAYJ,EAAOW,KAGnB,iBAAKY,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SACGtB,EAAeuB,KAAI,SAAAC,GAAM,OACxB,SAACC,EAAA,EAAD,CACAD,OAAQA,EACRE,GAAIF,EAAOE,IAHa,MAQ3BtB,IACC,mBAAQuB,KAAK,SAASN,UAAWC,EAAaM,QA/B7B,WACvBzB,GAAc,SAAA0B,GAAS,OAAIA,EAAY,CAAhB,GACxB,EA6BO,SAAyE,gBAMlF,EClBD,EA3BgB,WACd,OAA0B9B,EAAAA,EAAAA,YAA1B,eAAOD,EAAP,KAAcgC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAY1B,EAAAA,EAAAA,IAAY2B,EAAAA,GAU9B,OAJAd,EAAAA,EAAAA,YAAU,WACRW,GAASI,EAAAA,EAAAA,KACV,GAAE,CAACJ,KAGF,iCACE,yBAAME,IAAa,uBAAG,8BACtB,SAACG,EAAA,EAAD,CACEC,SAZe,SAACC,GACpBR,EAASQ,EACV,KAYG,SAACzC,EAAD,CACEC,MAAOA,MAId,C","sources":["webpack://react-homework-template/./src/components/AdvertsGallery/AdvertsGallery.module.css?c4c3","components/AdvertsGallery/AdvertsGallery.jsx","pages/Catalog.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"AdvertsGallery_box__kJKWP\",\"advertsGallery\":\"AdvertsGallery_advertsGallery__2i5FH\",\"loadBtn\":\"AdvertsGallery_loadBtn__o9jRl\"};","import { useState, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { selectAllTAdverts } from \"../../redux/adverts/selectors\";\nimport { AdvertsGalleryItem } from '../AdvertsGalleryItem/AdvertsGalleryItem';\nimport { selectByQuery } from \"js/func/selectByQuery\";\nimport css from './AdvertsGallery.module.css';\n\nexport const AdvertsGallery = ({ query }) => {\n  const [visibleAdverts, setVisibleAdverts] = useState([]);\n  const [numberPart, setNumberPart] = useState(1);\n  const [visibleLoadBtn, setVisibleLoadBtn] = useState(false);\n\n  const allAdverts = useSelector(selectAllTAdverts);\n\n  const changeNumberPart = () => {\n    setNumberPart(prevState => prevState + 1);\n  };\n\n  const getVisibleAdverts = useCallback(() => {\n    const result = query ? selectByQuery(allAdverts, query) : allAdverts;\n\n    const startIndex = (numberPart - 1) * 8;\n    const endIndex = Math.min(startIndex + 8, result.length);\n    setVisibleLoadBtn(endIndex < result.length);\n\n    const partAdverts = result.slice(0, endIndex);\n    setVisibleAdverts(partAdverts);\n  }, [allAdverts, query, numberPart]);\n\n  useEffect(() => {\n    getVisibleAdverts();\n  }, [numberPart, query, getVisibleAdverts]);\n\n  return (\n      <div className={css.box}>\n        <ul className={css.advertsGallery}>\n          {visibleAdverts.map(advert => (\n            <AdvertsGalleryItem \n            advert={advert} \n            id={advert.id} \n            />\n          ))}\n        </ul>\n\n        {visibleLoadBtn && (\n          <button type=\"button\" className={css.loadBtn} onClick={changeNumberPart}>\n            Load more\n          </button>\n        )}\n      </div>\n  );\n};\n\nAdvertsGallery.propTypes = {\n  query: PropTypes.object,\n};","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIsLoading } from \"../redux/adverts/selectors\";\nimport { fetchAdverts } from \"../redux/adverts/operations\";\nimport { SearchBar } from \"components/SearchBar/SearchBar\";\nimport { AdvertsGallery } from \"../components/AdvertsGallery/AdvertsGallery\";\n\nconst Catalog = () => {\n  const [query, setQuery] = useState();\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleSearch = (search) => {\n    setQuery(search);\n  };\n\n  useEffect(() => {\n    dispatch(fetchAdverts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div>{isLoading && <b>Request in progress...</b>}</div>\n      <SearchBar\n        onSubmit={handleSearch}\n      />\n      <AdvertsGallery\n        query={query}\n      />\n    </>\n  )\n};\n\nexport default Catalog;"],"names":["AdvertsGallery","query","useState","visibleAdverts","setVisibleAdverts","numberPart","setNumberPart","visibleLoadBtn","setVisibleLoadBtn","allAdverts","useSelector","selectAllTAdverts","getVisibleAdverts","useCallback","result","selectByQuery","startIndex","endIndex","Math","min","length","partAdverts","slice","useEffect","className","css","map","advert","AdvertsGalleryItem","id","type","onClick","prevState","setQuery","dispatch","useDispatch","isLoading","selectIsLoading","fetchAdverts","SearchBar","onSubmit","search"],"sourceRoot":""}